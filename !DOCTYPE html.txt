<!DOCTYPE html>
<html lang="ar" dir="rtl">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>جميع العملات الرقمية ورموز الميمز</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 20px;
            background-color: #f9f9f9;
        }
        table {
            width: 100%;
            border-collapse: collapse;
            margin-top: 20px;
        }
        th, td {
            padding: 10px;
            text-align: center;
            border: 1px solid #ddd;
        }
        th {
            background-color: #4CAF50;
            color: white;
        }
        tr:nth-child(even) {
            background-color: #f2f2f2;
        }
        .positive {
            color: green;
        }
        .negative {
            color: red;
        }
        a {
            text-decoration: none;
            color: #007BFF;
            font-weight: bold;
        }
        a:hover {
            text-decoration: underline;
        }
        #loadingIndicator {
            position: fixed;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            font-size: 18px;
            color: #4CAF50;
        }
    </style>
</head>
<body>
    <h1>العملات الرقمية التي نسبة تغيرها ≥ 0.50%</h1>
    <div id="loadingIndicator">جارٍ تحميل البيانات...</div>
    <table id="cryptoTable" style="display: none;">
        <thead>
            <tr>
                <th>اسم العملة</th>
                <th>سعر العملة (SAR)</th>
                <th>نسبة التغير (آخر دقيقة)</th>
                <th>نسبة حجم التداول (دقيقة / السوق)</th>
            </tr>
        </thead>
        <tbody>
            <!-- البيانات ستُضاف هنا بواسطة JavaScript -->
        </tbody>
    </table>
    <script>
        const usdToSarRate = 3.75; // سعر صرف الدولار الأمريكي إلى الريال السعودي
        const tableBody = document.querySelector('#cryptoTable tbody');
        const cryptoData = {}; // تخزين بيانات العملات
        const loadingIndicator = document.getElementById('loadingIndicator');
        const memeCoins = ['DOGE', 'SHIB', 'PEPE', 'FLOKI', 'WIF', 'BONK'];
        // ملفات الصوت
        const entrySound = new Audio('https://www.soundjay.com/button/beep-07.mp3'); // صوت دخول العملة
        const exitSound = new Audio('https://www.soundjay.com/button/beep-08.mp3'); // صوت خروج العملة
        // تتبع حالة العملات
        const coinStatus = {};
        // جلب جميع الأزواج المتاحة
        async function fetchAllSymbols() {
            try {
                const response = await fetch('https://api.binance.com/api/v3/exchangeInfo');
                const data = await response.json();
                return data.symbols
                    .filter(symbol => symbol.status === 'TRADING' && ['USDT', 'BUSD'].includes(symbol.quoteAsset))
                    .map(symbol => ({
                        symbol: symbol.symbol,
                        baseAsset: symbol.baseAsset,
                        quoteAsset: symbol.quoteAsset
                    }));
            } catch (error) {
                console.error('حدث خطأ أثناء جلب الأزواج:', error);
                return [];
            }
        }
        // جلب إجمالي حجم التداول لسوق العملات الرقمية
        async function fetchMarketVolume() {
            try {
                const response = await fetch('https://api.binance.com/api/v3/ticker/24hr');
                const data = await response.json();
                let totalMarketVolume = 0;
                data.forEach(item => {
                    totalMarketVolume += parseFloat(item.quoteVolume); // جمع حجم التداول لكل العملات
                });
                return totalMarketVolume;
            } catch (error) {
                console.error('حدث خطأ أثناء جلب حجم التداول للسوق:', error);
                return 0;
            }
        }
        // إنشاء اتصال WebSocket
        async function connectWebSocket(symbols) {
            const totalMarketVolume = await fetchMarketVolume(); // جلب إجمالي حجم التداول للسوق
            const socket = new WebSocket('wss://stream.binance.com:9443/ws/!ticker@arr');
            socket.onmessage = (event) => {
                const tickers = JSON.parse(event.data);
                tickers.forEach(ticker => {
                    const symbol = ticker.s;
                    const baseAsset = symbol.replace('USDT', '').replace('BUSD', '');
                    const quoteAsset = symbol.includes('USDT') ? 'USDT' : 'BUSD';
                    const price = parseFloat(ticker.c);
                    const volume = parseFloat(ticker.v);
                    const timestamp = Date.now();
                    if (!cryptoData[symbol]) {
                        cryptoData[symbol] = {
                            prices: [],
                            lastPrice: price,
                            lastTimestamp: timestamp,
                            baseAsset: baseAsset,
                            quoteAsset: quoteAsset,
                            minuteVolume: 0,
                            totalMarketVolume: totalMarketVolume
                        };
                    }
                    // تحديث حجم التداول خلال الدقيقة الحالية
                    cryptoData[symbol].minuteVolume += volume;
                    // إضافة السعر الجديد إلى المصفوفة
                    cryptoData[symbol].prices.push({ price, timestamp });
                    // حذف الأسعار القديمة (أكبر من دقيقة)
                    cryptoData[symbol].prices = cryptoData[symbol].prices.filter(p => timestamp - p.timestamp <= 60000);
                    // تحديث السعر الأخير
                    cryptoData[symbol].lastPrice = price;
                    // إعادة عرض الجدول
                    renderTable();
                });
            };
            socket.onerror = (error) => console.error('حدث خطأ في WebSocket:', error);
            socket.onclose = () => setTimeout(() => connectWebSocket(symbols), 5000);
        }
        // عرض الجدول
        function renderTable() {
            // ترتيب العملات دائمًا من الأعلى إلى الأدنى بناءً على نسبة التغير
            const sortedSymbols = Object.keys(cryptoData).sort((a, b) => {
                const changeA = calculateChangePercent(cryptoData[a]);
                const changeB = calculateChangePercent(cryptoData[b]);
                return changeB - changeA; // ترتيب تنازلي
            });
            tableBody.innerHTML = '';
            sortedSymbols.forEach(symbol => {
                const { prices, lastPrice, baseAsset, quoteAsset, minuteVolume, totalMarketVolume } = cryptoData[symbol];
                const changePercent = calculateChangePercent(cryptoData[symbol]);
                // حساب نسبة حجم التداول (دقيقة / السوق)
                const marketVolumeRatio = calculateMarketVolumeRatio(minuteVolume, totalMarketVolume);
                // عرض العملات التي نسبة تغيرها ≥ 0.50% فقط
                if (changePercent >= 0.5) {
                    const priceInSar = (lastPrice * usdToSarRate).toFixed(2);
                    const row = document.createElement('tr');
                    // اسم العملة
                    const symbolCell = document.createElement('td');
                    const link = document.createElement('a');
                    link.href = `https://www.binance.com/en/trade/${baseAsset}_${quoteAsset}`;
                    link.target = '_blank';
                    link.textContent = baseAsset;
                    if (memeCoins.includes(baseAsset)) {
                        link.style.color = '#FF5722';
                        link.style.fontWeight = 'bold';
                    }
                    symbolCell.appendChild(link);
                    row.appendChild(symbolCell);
                    // سعر العملة
                    const priceCell = document.createElement('td');
                    priceCell.textContent = priceInSar;
                    row.appendChild(priceCell);
                    // نسبة التغير
                    const changeCell = document.createElement('td');
                    changeCell.textContent = `${changePercent}%`;
                    if (changePercent > 0) changeCell.classList.add('positive');
                    else if (changePercent < 0) changeCell.classList.add('negative');
                    row.appendChild(changeCell);
                    // نسبة حجم التداول (دقيقة / السوق)
                    const marketVolumeCell = document.createElement('td');
                    marketVolumeCell.textContent = `${marketVolumeRatio}%`;
                    row.appendChild(marketVolumeCell);
                    tableBody.appendChild(row);
                }
            });
            if (document.getElementById('cryptoTable').style.display === 'none') {
                document.getElementById('cryptoTable').style.display = 'table';
                loadingIndicator.style.display = 'none';
            }
        }
        // حساب نسبة التغير
        function calculateChangePercent(data) {
            const { prices, lastPrice } = data;
            if (prices.length > 1) {
                const firstPrice = prices[0].price;
                return ((lastPrice - firstPrice) / firstPrice * 100).toFixed(2);
            }
            return 0;
        }
        // حساب نسبة حجم التداول (دقيقة / السوق)
        function calculateMarketVolumeRatio(minuteVolume, totalMarketVolume) {
            return totalMarketVolume > 0 ? ((minuteVolume / totalMarketVolume) * 100).toFixed(2) : 0;
        }
        // بدء التطبيق
        async function init() {
            const symbols = await fetchAllSymbols();
            connectWebSocket(symbols);
        }
        init();
    </script>
</body>
</html>